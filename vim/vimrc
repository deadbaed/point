"file syntax
syntax on
filetype plugin on

set mouse=a       " Enable mouse (esp. for balloons and scrolling in popups)
set ttymouse=sgr  " .. also in 'terminals that emit SGR-styled mouse reporting'

"leader keys
let mapleader = ";"
let maplocalleader = ','

"search
set incsearch "highlight search result as you type it
set hlsearch "highlight all search results
set showmatch "highlight matching () {} []

"display lines
set number relativenumber

"window navigation
"see :help key-notation
noremap <TAB> <C-W>w

"aliases
cnoreabbrev Wq wq
cnoreabbrev WQ wq
cnoreabbrev Q q
cnoreabbrev Qa qa
cnoreabbrev QA qa

"always enable status line
set laststatus=2

"configure status line
set statusline=
" start with space for clean look
set statusline+=%f " filename
set statusline+=%m "modification flag
set statusline+=%r "read only flag
set statusline+=%= "separation
set statusline+=\ %y "type of file
set statusline+=\ %{&fileencoding?&fileencoding:&encoding} "file info
set statusline+=\[%{&fileformat}\] "file format
set statusline+=\ %p%% "percentage of file
set statusline+=\ %l:%c "line + col

""" Plugins
""" vim-plug https://github.com/junegunn/vim-plug
call plug#begin()
Plug 'tpope/vim-sensible' "sensible defaults
Plug 'catppuccin/vim', { 'as': 'catppuccin' }
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } } "fuzzy finder
Plug 'junegunn/fzf.vim' "fuzzy finder
Plug 'Raimondi/delimitMate' "automatically open/close braces
Plug 'freitass/todo.txt-vim' "todo.txt
Plug 'tpope/vim-vinegar' "netrw
Plug 'liuchengxu/vista.vim' "outline of a file
Plug 'airblade/vim-gitgutter' "git status in files
call plug#end()

"colors
set background=dark
colorscheme catppuccin_mocha
if (has("termguicolors"))
  set termguicolors
endif

"fuzzy-search
"files
nnoremap <leader>f :Files<CR>
"grep
nnoremap <leader>g :Rg<CR>
"ripgrep
nnoremap <leader>G :RG<CR>

