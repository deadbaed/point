[general]
# to get the passwords with `pass`
pythonfile = ~/.offlineimap.py
accounts = gmail
fsync = False

###############################################################################
[Account gmail]
localrepository = gmail-local
remoterepository = gmail-remote

# autorefresh: check email every x minutes
autorefresh = 2.5

# quick: make x quick refreshes between the time set in autorefresh
quick = 10

###############################################################################
[Repository gmail-local]
type = Maildir
localfolders = ~/email/gmail
sep = /
nametrans = lambda folder: {'drafts':   '[Gmail]/Drafts',
                            'sent':     '[Gmail]/Sent Mail',
                            'spam':     '[Gmail]/Spam',
                            'starred':  '[Gmail]/Starred',
                            'trash':    '[Gmail]/Trash',
                            'archive':  '[Gmail]/All Mail',
                            }.get(folder, folder)

###############################################################################
[Repository gmail-remote]
type = Gmail
remoteuser = loctauxphilippe
remotepasseval = pass_gmail()
realdelete = no
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
folderfilter = lambda folder: folder not in ['[Gmail]/All Mail']
nametrans = lambda folder: {'[Gmail]/Drafts':    'drafts',
                            '[Gmail]/Sent Mail': 'sent',
                            '[Gmail]/Starred':   'starred',
                            '[Gmail]/Spam':   'spam',
                            '[Gmail]/Trash':     'trash',
                            '[Gmail]/All Mail':  'archive',
                            }.get(folder, folder)

###############################################################################
# to be able to use imapoffline with mutt
[mbnames]
enabled = yes
filename = ~/.mutt-mailboxes
header = "mailboxes "
peritem = "+%(accountname)s/%(foldername)s"
sep = " "
footer = "\n"
